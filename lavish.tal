( lavish.tal )
|02 @System/expansion $2
|0e @System/debug $1
|10 @Console/vector $2 &read $1 &pad $5 &write $1

|01 @NZ
|1f @LENGTH
|00 @MAIN-RAM
|ffe0 @DEST
|ffed @CONSOLE-PATCH
|ffe7 @QUOTE-PATCH
|ffe1 @CONSOLE-ADDR
|fff4 @QUOTE-ADDR

%lit  ( -- ) { 00 }
%eval ( -- ) { 01 }
%mul  ( a b -- a*b )      { lit 1a eval }
%deo  ( byte port -- )    { lit 17 eval }
%dei  ( port -- byte )    { lit 16 eval }
%lda  ( addr* -- byte  )  { lit 14 eval }
%sta  ( byte addr* -- )   { lit 15 eval }
%jsr2 ( addr* -- | ret* ) { lit 2e eval }
%emit ( byte -- ) { console-write deo }
%console-write ( -- ) { lit 18 }
%system-debug  ( -- ) { lit 0e }
%dbg  ( -- ) { lit 01 system-debug deo }
%newline ( -- ) { lit 0a emit }

%DBG ( -- ) { [ LIT2 -NZ -System/debug ] DEO }

|100 @on-reset ( -> ) send BRK

@send ( cmd* -- )
    ;/end ;/command
    &loop
        LDAk .Console/write DEO
        INC2 GTH2k ?/loop
    POP2 POP2 JMP2r

&command
	
&end

(
&command [
    lit 15 lit 02 mul
    dbg emit newline
    dbg ] &end )

@send/byte ( byte -- )

@teleport ( addr* len* )
    %ORIGIN { ;MAIN-RAM ;on-reset }
    %DESTINATION { ;MAIN-RAM ;DEST }
    ;LENGTH ORIGIN DESTINATION mcpyr     ( copy to top memory )
    ;CONSOLE-PATCH ;CONSOLE-ADDR STA2    ( patch ;on-console )
    ;QUOTE-PATCH   ;QUOTE-ADDR   STA2    ( patch ;on-quote )
    ;DEST JMP2

@mcpyr ( length* src-bank* src* dst-bank* dst* -- )
	,&dst STR2  ,&dst-bank STR2  ,&src STR2  ,&src-bank STR2  ,&length STR2
	;&cmd .System/expansion DEO2
	JMP2r
		&cmd [ 02 &length $2 &src-bank $2 &src $2 &dst-bank $2 &dst $2 ]

&asm/memory
