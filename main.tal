@on-reset ( -> )
    :DBG BRK


@on-foo ( -> )
    :asm/setup                                  ( move thrift to top memory    )
    ;Module ;Module/end :asm/copy-blk           ( copy code                    )
    ;Module/Data :asm/set                       ( absolute pad to ;Module/Data )
    ;Module/Data ;Module/DataEnd :asm/copy-blk  ( copy data                    )
    [ :LIT2 0100 ] :JMP2                        ( jump to :on-reset on remote  )
    BRK

@Module ( -> ) [
    %<newline> ( -- ) { [ LIT2 -NewLine -Console/write ] DEO }
    |0a @NewLine

    |100 @fizzbuzz ( -> )
        #6501
        &>loop ( length i -- )
            DUP fizz OVR buzz ORA ?{ DUP <dec> }
            <newline>
            INC GTHk ?&>loop
        POP2 BRK

    %MOD ( a b -- a%b ) { DIVk MUL SUB }
    @fizz ( n -- ) #03 MOD ?{ #01 ;Module/fizz !<str> } #00 JMP2r
    @buzz ( n -- ) #05 MOD ?{ #01 ;Module/buzz !<str> } #00 JMP2r

    %<EMIT> ( c -- ) { .Console/write DEO }
    @<dec> ( n -- ) DUP #0a DIV /d #0a MOD &d #30 ADD <EMIT> JMP2r
    @<str> ( s* -- ) LDAk <EMIT> INC2 LDAk ?<str> POP2 JMP2r
] @Module/end

&Data &fizz "Fizz $1 &buzz "Buzz $1 &DataEnd
