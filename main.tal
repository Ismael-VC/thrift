( Print the first 30 numbers using the following rules:
    | If n is divisible by 3, print "fizz"
    | If n is divisible by 5, print "buzz"
    | If n is divisible by both, print "fizzbuzz"
    | Else, print the number )

@:on-reset ( -> ) :fizzbuzz BRK

@:fizzbuzz ( -- )
    [ :LIT2 1e00 ] :DBG
    &>loop ( :length :i -- )
        :DUP :fizz :OVR :buzz :ORA :EMIT ?{ :DUP :<dec> }
        [ :LIT2 0a18 ] :DEO
        :INC :GTHk :EMIT ?&>loop
    :POP2 JMP2r

@:fizz ( :n -- ) [ :LIT 03 ] :DIVk :MUL :SUB :EMIT ?{ [ :LIT 01 ] ;msgs/fizz !:<str> } [ :LIT 00 ] JMP2r
@:buzz ( :n -- ) [ :LIT 05 ] :DIVk :MUL :SUB :EMIT ?{ [ :LIT 01 ] ;msgs/buzz !:<str> } [ :LIT 00 ] JMP2r
@:<dec> ( :n -- ) :DUP [ :LIT 0a ] :DIV /d [ :LIT 0a ] :DIVk :MUL :SUB &d [ :LIT 30 ] :ADD [ :LIT 18 ] :DEO JMP2r
@:<str> ( s* -- ) LDAk :EMIT [ :LIT 18 ] :DEO INC2 LDAk ?:<str> POP2 JMP2r
@msgs &fizz "Fizz $1 &buzz "Buzz $1

